version: '3.8'
services:
  mongo:
    image: mongo
    restart: always
    command: mongod --port 3211
    volumes:
      - ./docker_mongo:/data/db
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME:
    #  MONGO_INITDB_ROOT_PASSWORD: example

  web-next:
    links:
      - mongo
    image: node:18
    restart: always
    volumes:
      - ./:/web
      - ./config.docker.toml:/web/config.toml
    command: bash -c "cd /web && npm run start"

  varnish-web:
    image: varnish:stable
    links:
      - mongo
      - background-service
      - web-next
    volumes:
      - "./varnish-web.vcl:/etc/varnish/default.vcl"
    tmpfs:
      - /var/lib/varnish:exec
    environment:
      - VARNISH_SIZE=2G
    command: "-p default_keep=300"

  background-service:
    links:
      - mongo
      - web-next
    image: node:18
    restart: always
    volumes:
      - ./:/web
      - ./config.docker.toml:/web/config.toml
    command: bash -c "cd /web && ls && npm run service"

  app-nginx:
    links:
      - mongo
      - varnish-web
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    #network_mode: "host"
    ports:
      - '80:80'
      - '81:81'
    volumes:
      - ./docker_npm_data:/data
      - ./docker_npm_letsencrypt:/etc/letsencrypt
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - "varnish-web"